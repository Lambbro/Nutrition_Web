// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nutrition.Data;

#nullable disable

namespace Nutrition.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241124061439_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nutrition.Models.Account", b =>
                {
                    b.Property<int>("account_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("account_id"));

                    b.Property<bool>("account_type")
                        .HasColumnType("bit");

                    b.Property<int?>("nutritionist_id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("account_id");

                    b.HasIndex("nutritionist_id");

                    b.HasIndex("user_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("Nutrition.Models.NutritionPlan", b =>
                {
                    b.Property<int>("sMaKeHoach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sMaKeHoach"));

                    b.Property<DateTime>("dNgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("iSoCalo")
                        .HasColumnType("int");

                    b.Property<string>("sChiTietKeHoach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sGioiYThucPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sMaChuyenGia")
                        .HasColumnType("int");

                    b.Property<string>("sMaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("sMaKeHoach");

                    b.HasIndex("user_id");

                    b.ToTable("nutrition_plans");
                });

            modelBuilder.Entity("Nutrition.Models.Nutritionist", b =>
                {
                    b.Property<int>("sMaChuyenGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sMaChuyenGia"));

                    b.Property<bool>("bGioiTinh")
                        .HasColumnType("bit");

                    b.Property<int>("iTuoi")
                        .HasColumnType("int");

                    b.Property<string>("sChuyenMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sDiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sHoTenChuyenGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sSDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sMaChuyenGia");

                    b.ToTable("nutritionists");
                });

            modelBuilder.Entity("Nutrition.Models.Schedule", b =>
                {
                    b.Property<int>("schedule_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("schedule_id"));

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("nutritionist_id")
                        .HasColumnType("int");

                    b.Property<int>("schedule_type")
                        .HasColumnType("int");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("schedule_id");

                    b.HasIndex("nutritionist_id");

                    b.HasIndex("user_id");

                    b.ToTable("schedules");
                });

            modelBuilder.Entity("Nutrition.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("eating_habits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gender")
                        .HasColumnType("bit");

                    b.Property<string>("health_info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("height")
                        .HasColumnType("real");

                    b.Property<string>("meals_per_day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Nutrition.Models.UserProgress", b =>
                {
                    b.Property<int>("progress_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("progress_id"));

                    b.Property<string>("commment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("create_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("health_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("height")
                        .HasColumnType("real");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("progress_id");

                    b.HasIndex("user_id");

                    b.ToTable("user_progress");
                });

            modelBuilder.Entity("Nutrition.Models.Account", b =>
                {
                    b.HasOne("Nutrition.Models.Nutritionist", "Nutritionist")
                        .WithMany()
                        .HasForeignKey("nutritionist_id");

                    b.HasOne("Nutrition.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("Nutritionist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nutrition.Models.NutritionPlan", b =>
                {
                    b.HasOne("Nutrition.Models.User", null)
                        .WithMany("plans")
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("Nutrition.Models.Schedule", b =>
                {
                    b.HasOne("Nutrition.Models.Nutritionist", "Nutritionist")
                        .WithMany()
                        .HasForeignKey("nutritionist_id");

                    b.HasOne("Nutrition.Models.User", "User")
                        .WithMany("schedules")
                        .HasForeignKey("user_id");

                    b.Navigation("Nutritionist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nutrition.Models.UserProgress", b =>
                {
                    b.HasOne("Nutrition.Models.User", "User")
                        .WithMany("user_progresses")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nutrition.Models.User", b =>
                {
                    b.Navigation("plans");

                    b.Navigation("schedules");

                    b.Navigation("user_progresses");
                });
#pragma warning restore 612, 618
        }
    }
}
